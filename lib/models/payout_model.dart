import 'package:cloud_firestore/cloud_firestore.dart';

class Payout {
  final String id;
  final String ownerUid;
  final String paidToName;
  final double paidAmount;
  final Timestamp? paidDate;
  final String referenceNote;

  Payout({
    required this.id,
    required this.ownerUid,
    required this.paidToName,
    required this.paidAmount,
    this.paidDate,
    required this.referenceNote,
  });

  // Converts a Payout object to a Firestore-compatible map.
  Map<String, dynamic> toFirestore() {
    return {
      'ownerUid': ownerUid,
      'paidToName': paidToName,
      'paidAmount': paidAmount,
      'paidDate': paidDate ?? FieldValue.serverTimestamp(),
      'referenceNote': referenceNote,
    };
  }

  // Creates a Payout object from a Firestore document.
  factory Payout.fromFirestore(DocumentSnapshot doc) {
    Map<String, dynamic> data = doc.data() as Map<String, dynamic>;
    return Payout(
      id: doc.id,
      ownerUid: data['ownerUid'] ?? '',
      paidToName: data['paidToName'] ?? '',
      paidAmount: (data['paidAmount'] ?? 0.0).toDouble(),
      paidDate: data['paidDate'] as Timestamp?,
      referenceNote: data['referenceNote'] ?? '',
    );
  }

  // Creates a Payout object from a map (useful for new payouts).
  factory Payout.fromMap(Map<String, dynamic> map) {
    return Payout(
      id: '', // ID is generated by Firestore, so it's empty initially.
      ownerUid: map['ownerUid'] ?? '',
      paidToName: map['paidToName'] ?? '',
      paidAmount: (map['paidAmount'] ?? 0.0).toDouble(),
      paidDate: map['paidDate'] as Timestamp?,
      referenceNote: map['referenceNote'] ?? '',
    );
  }
}
